Unix_Linux-Tips

2/14/17
http://unix.stackexchange.com/questions/94207/recursively-add-a-file-to-all-sub-directories
Touch or copy to a file in every directory under a root recursively

10/13/16
http://tecadmin.net/bash-shell-test-if-file-or-directory-exists/#

16 APRIL 2014
Bash Shell Ð Test If File or Directory Exists  Written by Rahul K.

 
While working with bash programming, we many times need to check if file already exists, create new files, inserts data in files. Also some times we required to execute other scripts from other scripts.

This article has few details about testing file and directories existence in system. Which can be very helpful for you while writing shell scripting.

1. Bash Shell Ð Test if File Exists

If we required to add some content or need to create files from script. First make sure that file already exists or not. For example one of my script creating logs in file /tmp/testfile.log and we need to make sure this file exists or not

#!/bin/bash
if [ -f /tmp/testfile.log ]
then
    echo "File exists"
fi
The above statements can be also write using test keyword as below

#!/bin/bash
if test -f /tmp/testfile.log
then
    echo "File exists"
fi
Or in a single line we can write it as below. This is very useful while writing in shell scripting.

[ -f /tmp/testfile.log ] && echo "File exists"
to add else part in above command

[ -f /tmp/testfile.log ] && echo "File exists" || echo "File not exists"

2. Bash Shell Ð Test if Directory Exists
Sometimes we need to create files inside a specific directory or need directory any other reason, we should make sure that directory exists. For example we are checking /tmp/mydir exists for not.

#!/bin/bash

if [ -d /tmp/mydir ]
then
    echo "Directory exists"
fi
The above statements can be also write using test keyword as below

#!/bin/bash

if test -d /tmp/mydir
then
    echo "Directory exists"
fi
Or in a single line we can write it as below

[ -d /tmp/mydir ] && echo "Directory exists"

3. Bash Shell Ð Create File Directory only if not Exists
This is the best practice to check file existence before creating them else you will get error message.

For File:   [ ! -f /tmp/testfile.log ] && touch /tmp/testfile.log

For Directory:   [ ! -d /tmp/mydir  ] && mkdir /tmp/mydir

9/7/2016
Special Mac Command line user of PostFix as an SMTP daemon on the mac
for command Line emailingÉÉ.
https://www.phase2technology.com/blog/how-to-enable-local-smtp-server-postfix-on-os-x-leopard/
edit /Systems/Library/LaunchDaemons/org.postfix.master.plist following inst above



http://butlerpc.net/blog/2012/02/execute-a-command-for-each-file-in-a-directory-recursively-on-linux/
find . -type f -name '*.php' -exec sed -i 's/    /\t/g' {} \;
Explanation:

find lists all files, one per line, in the current directory and all subdirectories recursively
. (period) means current directory
-type f only list files, not directories.
-name Ô*.phpÕ only if the name matches * (wildcard) with Ò.phpÓ at the end
-exec execute the following command for each result that matched
sed -i Ôs/    /\t/gÕ replace, or substitute, one string for another. IÕm searching for four consecutive spaces and replacing with t, meaning tab character. the /g at the end means global, replace each instance wherever it may appear in the file on each line. -i means Òedit file in placeÓ so the modified file is saved back to itself.
{} this inputs the file for the sed command
\; I think this finishes the -exec parameter for find. DonÕt forget the backslash


How to recursively find files and grep for contents
find . -name Ô*.javaÕ -print0 | xargs -0 grep Òfor what evvah"
find . -name *.java -print0 | xargs -0 grep @Test | grep "/integration/Ò|wc
Should count all the integration tests

google:mac cmdline bash foreach example
http://www.cyberciti.biz/faq/linux-unix-bash-for-loop-one-line-command/
Commands:
for i in {1..5}; do COMMAND-HERE; done
for((i=1;i<=10;i+=2)); do echo "Welcome $i times"; done
Files:
for i in *; do echo $i; done
for i in /etc/*.conf; do cp $i /backup; done



in order to get rid of the .DS_Store entry
in Git hub even when you have that entered
into ./.gitignore you need to do the following
git rm Ñcached .DS_Store

then commit and push
git status will no longer report it


2/4/16  nice tip
How to diff common files between two directories
diff -srq dir1 dir2 | grep identical


http://stackoverflow.com/questions/31797856/loop-through-files-in-mac-terminal
